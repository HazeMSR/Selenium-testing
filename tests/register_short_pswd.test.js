// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

//Manuel RodrÃ­guez's test
describe('register_short_pswd', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('register_short_pswd', async function() {
    await driver.get("http://demo.guru99.com/test/newtours/index.php")
    await driver.manage().window().setRect(691, 699)
    await driver.findElement(By.linkText("REGISTER")).click()
    await driver.findElement(By.name("firstName")).click()
    await driver.findElement(By.name("firstName")).sendKeys("Kevin")
    await driver.findElement(By.name("lastName")).sendKeys("Sanders")
    await driver.findElement(By.name("phone")).sendKeys("5514986320")
    await driver.findElement(By.id("userName")).sendKeys("fakeemail@fake.com")
    await driver.findElement(By.name("address1")).sendKeys("Lexington Ave 352")
    await driver.findElement(By.name("city")).sendKeys("Los Angeles")
    await driver.findElement(By.name("state")).sendKeys("California")
    await driver.findElement(By.name("postalCode")).sendKeys("90038")
    await driver.findElement(By.name("country")).click()
    {
      const dropdown = await driver.findElement(By.name("country"))
      await dropdown.findElement(By.xpath("//option[. = 'UNITED STATES']")).click()
    }
    await driver.findElement(By.name("country")).click()
    await driver.findElement(By.id("email")).click()
    await driver.findElement(By.id("email")).sendKeys("kevinsdrs")
    await driver.findElement(By.name("password")).sendKeys("k")
    await driver.findElement(By.name("confirmPassword")).sendKeys("k")
    await driver.findElement(By.name("submit")).click()

    const message = await driver.findElement(By.css("table>tbody>tr>td>p>font>b")).getText()
    const expectedMessage = 'Password must contain at least 8 characters'

    assert.equal(message, expectedMessage, 'User was registered when it should not had')
  })
})
