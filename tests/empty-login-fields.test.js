// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const chrome = require('selenium-webdriver/chrome');
const chromedriver = require('chromedriver');

chrome.setDefaultService(new chrome.ServiceBuilder(chromedriver.path).build());



describe('Empty login fields', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Empty login fields', async function() {
    // Test name: Empty login fields
    // Step # | name | target | value
    // 1 | open | /test/newtours/ | 
    await driver.get("http://demo.guru99.com/test/newtours/")
    // 2 | setWindowSize | 927x789 | 
    await driver.manage().window().setRect(927, 789)
    // 3 | click | name=userName | 
    await driver.findElement(By.name("userName")).click()
    // 4 | click | name=password | 
    await driver.findElement(By.name("password")).click()
    // 5 | click | css=tr:nth-child(4) > td > table > tbody > tr | 
    await driver.findElement(By.css("tr:nth-child(4) > td > table > tbody > tr")).click()
    // 6 | click | name=submit | 
    await driver.findElement(By.name("submit")).click()

    const message = await driver.findElement(By.tagName("h3")); 
    
    // await driver.wait(() => {
    //   return message.isDisplayed();
    // }, 15000);

    const actualMessage = await message.getText();
    const expectedMessage = 'Login Successfully';

    assert.notEqual(actualMessage, expectedMessage, 'Error: Fill the username and password for login');
  })
})
